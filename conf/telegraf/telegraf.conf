# TEL_GLOBAL_TAGS* = 
# TEL_AGENT* = TEL_AGENT_0 TEL_AGENT_FLUSH TEL_AGENT_HOSTNAME TEL_AGENT_INTERVAL TEL_AGENT_METRIC 
[agent]
flush_interval = "10s"
flush_jitter = "0s"
hostname = "${HOSTNAME}"
interval = "10s"
round_interval = true
metric_batch_size = 1000
metric_buffer_limit = 10000

# TEL_OUTPUTS* = TEL_OUTPUTS_INFLUXDB_0 TEL_OUTPUTS_INFLUXDB_DATABASE TEL_OUTPUTS_INFLUXDB_URLS 
[[outputs.influxdb]]
  urls = ["${INFLUX_URL}"]
  token = ["${INFLUX_TOKEN}"]
  organization = "${INFLUX_ORG}"
  bucket = "${INFLUX_BUCKET}"


# TEL_PROCESSORS* = 
# TEL_AGGREGATORS* = 
# TEL_INPUTS* = TEL_INPUTS_CPU_0 TEL_INPUTS_CPU_FLAGS TEL_INPUTS_DISKIO_0 TEL_INPUTS_DISK_0 TEL_INPUTS_KERNEL_0 TEL_INPUTS_MEM_0 TEL_INPUTS_NETSTAT_0 TEL_INPUTS_NET_0 TEL_INPUTS_PROCESSES_0 TEL_INPUTS_SWAP_0 TEL_INPUTS_SYSTEM_0 
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
[[inputs.diskio]]
[[inputs.disk]]
[[inputs.kernel]]
[[inputs.mem]]
[[inputs.netstat]]
[[inputs.net]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]

[[inputs.file]] 
  files = ["/sys/class/thermal/thermal_zone0/temp"]
  name_override = "cpu_temperature"
  data_format = "value"
  data_type = "integer"
  
[[inputs.exec]]
  commands = [ "/usr/bin/vcgencmd measure_temp" ]
  name_override = "gpu_temperature"
  data_format = "grok"
  grok_patterns = ["%{NUMBER:value:float}"]

[[inputs.docker]]
## Docker Endpoint
  ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
  ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
  endpoint = "unix:///var/run/docker.sock"

  ## Set to true to collect Swarm metrics(desired_replicas, running_replicas)
  ## Note: configure this in one of the manager nodes in a Swarm cluster.
  ## configuring in multiple Swarm managers results in duplication of metrics.
#  gather_services = false

  ## Only collect metrics for these containers. Values will be appended to
  ## container_name_include.
  ## Deprecated (1.4.0), use container_name_include
#  container_names = []

  ## Set the source tag for the metrics to the container ID hostname, eg first 12 chars
#  source_tag = false

  ## Containers to include and exclude. Collect all if empty. Globs accepted.
#  container_name_include = []
#  container_name_exclude = []

  ## Container states to include and exclude. Globs accepted.
  ## When empty only containers in the "running" state will be captured.
  ## example: container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
  ## example: container_state_exclude = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
  container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
  # container_state_exclude = []

  ## Timeout for docker list, info, and stats commands
  timeout = "5s"

  ## Whether to report for each container per-device blkio (8:0, 8:1...) and
  ## network (eth0, eth1, ...) stats or not
  perdevice = true

  ## Whether to report for each container total blkio and network stats or not
  total = false

  ## docker labels to include and exclude as tags.  Globs accepted.
  ## Note that an empty array for both will include all labels as tags
#  docker_label_include = []
#  docker_label_exclude = []

  ## Which environment variables should we use as a tag
#  tag_env = ["JAVA_HOME", "HEAP_SIZE"]

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false


# # Retrieves SNMP values from remote agents
## router01
[[inputs.snmp]]
#   ## Agent addresses to retrieve values from.
#   ##   example: agents = ["udp://127.0.0.1:161"]
#   ##            agents = ["tcp://127.0.0.1:161"]

  agents = ["udp://router01.isoardi.local:161"]
  #agents = ["udp://192.168.88.251:161"]
  interval = "5s"
  [[inputs.snmp.field]]
    name = "host"
    oid = ".1.3.6.1.2.1.1.5.0"
    is_tag = true
  [[inputs.snmp.field]]
    name = "uptime"
    oid = ".1.3.6.1.2.1.1.3.0"
  [[inputs.snmp.field]]
    name = "cpu-frequency"
    oid = ".1.3.6.1.4.1.14988.1.1.3.14.0"
  [[inputs.snmp.field]]
    name = "cpu1-load"
    oid = ".1.3.6.1.2.1.25.3.3.1.2.1"
  [[inputs.snmp.field]]
    name = "cpu2-load"
    oid = ".1.3.6.1.2.1.25.3.3.1.2.2"
  [[inputs.snmp.field]]
    name = "voltage"
    oid = ".1.3.6.1.4.1.14988.1.1.3.8.0"
  [[inputs.snmp.field]]
    name = "bytes_sent"
    oid = "IF-MIB::ifOutOctets.1"
  [[inputs.snmp.field]]
    name = "bytes_sent"
    oid = "IF-MIB::ifDescr.1"
  is_tag = true
#

# Interfaces
  [[inputs.snmp.table]]
    name = "snmpInterfaces1"
    inherit_tags = ["host"]
    [[inputs.snmp.table.field]]
      name = "ifname"
      oid = ".1.3.6.1.2.1.2.2.1.2"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "macaddress"
      oid = ".1.3.6.1.2.1.2.2.1.6"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "actualmtu"
      oid = ".1.3.6.1.2.1.2.2.1.4"
    [[inputs.snmp.table.field]]
      name = "adminstatus"
      oid = ".1.3.6.1.2.1.2.2.1.7"
    [[inputs.snmp.table.field]]
      name = "operstatus"
      oid = ".1.3.6.1.2.1.2.2.1.8"
    [[inputs.snmp.table.field]]
      name = "bytesin"
      #oid = ".1.3.6.1.2.1.31.1.1.1.6"
      oid = "IF-MIB::ifInOctets"
    [[inputs.snmp.table.field]]
      name = "packetsin"
      oid = ".1.3.6.1.2.1.31.1.1.1.7"
    [[inputs.snmp.table.field]]
      name = "discardsin"
      oid = ".1.3.6.1.2.1.2.2.1.13"
    [[inputs.snmp.table.field]]
      name = "errorsin"
      oid = ".1.3.6.1.2.1.2.2.1.14"
    [[inputs.snmp.table.field]]
      name = "bytesout"
      #oid = ".1.3.6.1.2.1.31.1.1.1.10"
      oid = "IF-MIB::ifOutOctets"
    [[inputs.snmp.table.field]]
      name = "packets-out"
      oid = ".1.3.6.1.2.1.31.1.1.1.11"
    [[inputs.snmp.table.field]]
      name = "discards-out"
      oid = ".1.3.6.1.2.1.2.2.1.19"
    [[inputs.snmp.table.field]]
      name= "errorsout"
      oid= ".1.3.6.1.2.1.2.2.1.20"

## Ap 1
[[inputs.snmp]]
#   ## Agent addresses to retrieve values from.
#   ##   example: agents = ["udp://127.0.0.1:161"]
#   ##            agents = ["tcp://127.0.0.1:161"]

  agents = ["udp://ap01.isoardi.local:161"]
  #agents = ["udp://192.168.88.251:161"]
  interval = "5s"
  [[inputs.snmp.field]]
    name = "host"
    oid = ".1.3.6.1.2.1.1.5.0"
    is_tag = true
  [[inputs.snmp.field]]
    name = "uptime"
    oid = ".1.3.6.1.2.1.1.3.0"
  [[inputs.snmp.field]]
    name = "cpu-frequency"
    oid = ".1.3.6.1.4.1.14988.1.1.3.14.0"
  [[inputs.snmp.field]]
    name = "cpu1-load"
    oid = ".1.3.6.1.2.1.25.3.3.1.2.1"
  [[inputs.snmp.field]]
    name = "voltage"
    oid = ".1.3.6.1.4.1.14988.1.1.3.8.0"

# Interfaces
  [[inputs.snmp.table]]
    name = "snmpInterfaces1"
    inherit_tags = ["host"]
    [[inputs.snmp.table.field]]
      name = "ifname"
      oid = ".1.3.6.1.2.1.2.2.1.2"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "macaddress"
      oid = ".1.3.6.1.2.1.2.2.1.6"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "actualmtu"
      oid = ".1.3.6.1.2.1.2.2.1.4"
    [[inputs.snmp.table.field]]
      name = "adminstatus"
      oid = ".1.3.6.1.2.1.2.2.1.7"
    [[inputs.snmp.table.field]]
      name = "operstatus"
      oid = ".1.3.6.1.2.1.2.2.1.8"
    [[inputs.snmp.table.field]]
      name = "bytesin"
      #oid = ".1.3.6.1.2.1.31.1.1.1.6"
      oid = "IF-MIB::ifInOctets"
    [[inputs.snmp.table.field]]
      name = "packetsin"
      oid = ".1.3.6.1.2.1.31.1.1.1.7"
    [[inputs.snmp.table.field]]
      name = "discardsin"
      oid = ".1.3.6.1.2.1.2.2.1.13"
    [[inputs.snmp.table.field]]
      name = "errorsin"
      oid = ".1.3.6.1.2.1.2.2.1.14"
    [[inputs.snmp.table.field]]
      name = "bytesout"
      #oid = ".1.3.6.1.2.1.31.1.1.1.10"
      oid = "IF-MIB::ifOutOctets"
    [[inputs.snmp.table.field]]
      name = "packets-out"
      oid = ".1.3.6.1.2.1.31.1.1.1.11"
    [[inputs.snmp.table.field]]
      name = "discards-out"
      oid = ".1.3.6.1.2.1.2.2.1.19"
    [[inputs.snmp.table.field]]
      name= "errorsout"
      oid= ".1.3.6.1.2.1.2.2.1.20"