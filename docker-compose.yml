version: "3.3"

services: 
  telegraf:
    #image: drpsychick/telegraf
    image: telegraf
    container_name: "telegraf"
    network_mode: "bridge"
#    ports:
#      - "161:161"
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    volumes:
      - "/proc:/rootfs/proc:ro"
      - "/sys:/rootfs/sys:ro"
      - "/etc:/rootfs/etc:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro" #get docker metrics
      - "/home/abacus/Progetti/docker_compose/tig/conf/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro" #config
      #- "/usr/share/snmp/mibs:/usr/share/snmp/mibs:ro" #snmp package tables 
      #- "/var/run/docker.sock:/var/run/docker.sock:ro"
    #cpu_percent: 1
    #mem_limit: 50m
    restart: always

  influxdb:
    image: influxdb:latest
    volumes:
      # Mount for influxdb data directory and configuration
      - influxdb2:/var/lib/influxdb2:rw
    ports:
      - "8086:8086"
  # Use the influx cli to set up an influxdb instance. 
  influxdb_cli:
    links:
      - influxdb
    image: influxdb:latest
    volumes:
      # Mount for influxdb data directory and configuration
      - influxdb2:/var/lib/influxdb2:rw
      #- ./ssl/influxdb-selfsigned.crt:/etc/ssl/influxdb-selfsigned.crt:rw
      #- ./ssl/influxdb-selfsigned.key:/etc/ssl/influxdb-selfsigned.key:rw
    environment: 
      # Use these same configurations parameters in your telegraf configuration, mytelegraf.conf.
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASS}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
      #- INFLUXD_TLS_CERT=/etc/ssl/influxdb-selfsigned.crt
      #- INFLUXD_TLS_KEY=/etc/ssl/influxdb-selfsigned.key
    entrypoint: ["./entrypoint.sh"]
    restart: on-failure:10
    depends_on:
      - influxdb




  # influxdb:
  #   image: influxdb:latest
  #   container_name: "influsdb"
  #   network_mode: "bridge"
  #   environment:
  #     IFX_GLOBAL: reporting-disabled = true
  #     INFLUXDB_HTTP_BIND_ADDRESS: ":8086"
  #   ports:
  #     #- 8086:8086
  #     - 8089:8089/udp
  #   expose:
  #     - "8086"
  #   volumes:
  #     - "influxdb:/var/lib/influxdb"
  #   #cpu_percent: 50
  #   #mem_limit: 1g
  #   restart: always
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
  #     - "traefik.http.routers.influxdb.rule=Host(`influxdb.asgard.local`)"
  #     - "traefik.http.routers.influxdb.entrypoints=web"

  grafana:
    image: grafana/grafana
    container_name: "grafana"
    network_mode: "bridge"
    #environment:
      #GF_INSTALL_PLUGINS: # plugins to install
    expose:
      - "3000"
    volumes:
      - "grafana:/var/lib/grafana"
    #cpu_percent: 1
    #mem_limit: 200m
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.rule=Host(`grafana.asgard.local`)"
      - "traefik.http.routers.grafana.entrypoints=web"

volumes:
  #influxdb:
  grafana:
  influxdb2:
